nname: ET CI Checks

on: [push, pull_request, workflow_dispatch]

jobs:
  ls_linting:
      runs-on: ubuntu-latest
      steps:  
        - uses: actions/checkout@v4
        - uses: ls-lint/action@v2.2.3

  md_formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: nosborn/github-action-markdown-cli@v3.3.0
      with:
        files: .
        config_file: .markdownlint.yml

  py_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Check formatting with Ruff
      - name: Python - Check Formatting with Ruff
        uses: astral-sh/ruff-action@v1
        with:
          args: "--fix"  # Autofixes issues to prevent pipeline errors

      # Check formatting with Black
      - name: Install Black
        run: pip install black
        shell: bash
      
      - name: Check Formatting with Black
        run: black --check .
        shell: bash

  py_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # passing ruff linting is required
      - name: Python - Check Linting - Ruff
        uses: astral-sh/ruff-action@v1

      # passing pylint is not required - discuss errors in code review
      - name: Python version
        run: python --version
        shell: bash
        if: always()
      - name: Install Pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
        shell: bash
      - name: Python - Check Linting - Pylint
        run: "pylint solutions tests || echo '::warning title=Pylint Error(s)::Discuss solutions and trade-offs in code review.'"
        shell: bash

  py_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Python version
        run: python --version
        shell: bash
      
      - name: Check for test files
        id: check_tests
        run: |
          test_files=$(find ./solutions/tests -type f -name "test_*.py")
          if [ -n "$test_files" ]; then
            echo "Found test files:"
            echo "$test_files"
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "No test files found matching pattern ./solutions/tests/test_*.py"
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi
        shell: bash
      
      - name: Python - Run Tests
        if: steps.check_tests.outputs.has_tests == 'true'
        run: python -m unittest
        shell: bash
